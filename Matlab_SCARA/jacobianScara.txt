[              -sin(theta_1 + theta_2 + theta_4), -sin(theta_1 + theta_2 + theta_4), 0, -sin(theta_1 + theta_2 + theta_4)]
[               cos(theta_1 + theta_2 + theta_4),  cos(theta_1 + theta_2 + theta_4), 0,  cos(theta_1 + theta_2 + theta_4)]
[                                              0,                                 0, 0,                                 0]
[              -cos(theta_1 + theta_2 + theta_4), -cos(theta_1 + theta_2 + theta_4), 0, -cos(theta_1 + theta_2 + theta_4)]
[              -sin(theta_1 + theta_2 + theta_4), -sin(theta_1 + theta_2 + theta_4), 0, -sin(theta_1 + theta_2 + theta_4)]
[                                              0,                                 0, 0,                                 0]
[                                              0,                                 0, 0,                                 0]
[                                              0,                                 0, 0,                                 0]
[                                              0,                                 0, 0,                                 0]
[- l_2*sin(theta_1 + theta_2) - l_1*sin(theta_1),       -l_2*sin(theta_1 + theta_2), 0,                                 0]
[  l_2*cos(theta_1 + theta_2) + l_1*cos(theta_1),        l_2*cos(theta_1 + theta_2), 0,                                 0]
[                                              0,                                 0, 1,                                 0]
 
[               -sin(theta_1 + theta_2 + theta_4), -sin(theta_1 + theta_2 + theta_4), 0, -sin(theta_1 + theta_2 + theta_4)]
[                cos(theta_1 + theta_2 + theta_4),  cos(theta_1 + theta_2 + theta_4), 0,  cos(theta_1 + theta_2 + theta_4)]
[                                               0,                                 0, 0,                                 0]
[               -cos(theta_1 + theta_2 + theta_4), -cos(theta_1 + theta_2 + theta_4), 0, -cos(theta_1 + theta_2 + theta_4)]
[               -sin(theta_1 + theta_2 + theta_4), -sin(theta_1 + theta_2 + theta_4), 0, -sin(theta_1 + theta_2 + theta_4)]
[                                               0,                                 0, 0,                                 0]
[                                               0,                                 0, 0,                                 0]
[                                               0,                                 0, 0,                                 0]
[                                               0,                                 0, 0,                                 0]
[ - l_2*sin(theta_1 + theta_2) - l_1*sin(theta_1),       -l_2*sin(theta_1 + theta_2), 0,                                 0]
[   l_2*cos(theta_1 + theta_2) + l_1*cos(theta_1),        l_2*cos(theta_1 + theta_2), 0,                                 0]
[                                               0,                                 0, 1,                                 0]
 
[               -sin(theta_1 + theta_2 + theta_4), -sin(theta_1 + theta_2 + theta_4), 0, -sin(theta_1 + theta_2 + theta_4)]
[                cos(theta_1 + theta_2 + theta_4),  cos(theta_1 + theta_2 + theta_4), 0,  cos(theta_1 + theta_2 + theta_4)]
[                                               0,                                 0, 0,                                 0]
[               -cos(theta_1 + theta_2 + theta_4), -cos(theta_1 + theta_2 + theta_4), 0, -cos(theta_1 + theta_2 + theta_4)]
[               -sin(theta_1 + theta_2 + theta_4), -sin(theta_1 + theta_2 + theta_4), 0, -sin(theta_1 + theta_2 + theta_4)]
[                                               0,                                 0, 0,                                 0]
[                                               0,                                 0, 0,                                 0]
[                                               0,                                 0, 0,                                 0]
[                                               0,                                 0, 0,                                 0]
[ - l_2*sin(theta_1 + theta_2) - l_1*sin(theta_1),       -l_2*sin(theta_1 + theta_2), 0,                                 0]
[   l_2*cos(theta_1 + theta_2) + l_1*cos(theta_1),        l_2*cos(theta_1 + theta_2), 0,                                 0]
[                                               0,                                 0, 1,                                 0]
 
[               -sin(theta_1 + theta_2 + theta_4), -sin(theta_1 + theta_2 + theta_4), 0, -sin(theta_1 + theta_2 + theta_4)]
[                cos(theta_1 + theta_2 + theta_4),  cos(theta_1 + theta_2 + theta_4), 0,  cos(theta_1 + theta_2 + theta_4)]
[                                               0,                                 0, 0,                                 0]
[               -cos(theta_1 + theta_2 + theta_4), -cos(theta_1 + theta_2 + theta_4), 0, -cos(theta_1 + theta_2 + theta_4)]
[               -sin(theta_1 + theta_2 + theta_4), -sin(theta_1 + theta_2 + theta_4), 0, -sin(theta_1 + theta_2 + theta_4)]
[                                               0,                                 0, 0,                                 0]
[                                               0,                                 0, 0,                                 0]
[                                               0,                                 0, 0,                                 0]
[                                               0,                                 0, 0,                                 0]
[ - l_2*sin(theta_1 + theta_2) - l_1*sin(theta_1),       -l_2*sin(theta_1 + theta_2), 0,                                 0]
[   l_2*cos(theta_1 + theta_2) + l_1*cos(theta_1),        l_2*cos(theta_1 + theta_2), 0,                                 0]
[                                               0,                                 0, 1,                                 0]
 
[               -sin(theta_1 + theta_2 + theta_4), -sin(theta_1 + theta_2 + theta_4), 0, -sin(theta_1 + theta_2 + theta_4)]
[                cos(theta_1 + theta_2 + theta_4),  cos(theta_1 + theta_2 + theta_4), 0,  cos(theta_1 + theta_2 + theta_4)]
[                                               0,                                 0, 0,                                 0]
[               -cos(theta_1 + theta_2 + theta_4), -cos(theta_1 + theta_2 + theta_4), 0, -cos(theta_1 + theta_2 + theta_4)]
[               -sin(theta_1 + theta_2 + theta_4), -sin(theta_1 + theta_2 + theta_4), 0, -sin(theta_1 + theta_2 + theta_4)]
[                                               0,                                 0, 0,                                 0]
[                                               0,                                 0, 0,                                 0]
[                                               0,                                 0, 0,                                 0]
[                                               0,                                 0, 0,                                 0]
[ - l_2*sin(theta_1 + theta_2) - l_1*sin(theta_1),       -l_2*sin(theta_1 + theta_2), 0,                                 0]
[   l_2*cos(theta_1 + theta_2) + l_1*cos(theta_1),        l_2*cos(theta_1 + theta_2), 0,                                 0]
[                                               0,                                 0, 1,                                 0]
 
[               -sin(theta_1 + theta_2 + theta_4), -sin(theta_1 + theta_2 + theta_4), 0, -sin(theta_1 + theta_2 + theta_4)]
[                cos(theta_1 + theta_2 + theta_4),  cos(theta_1 + theta_2 + theta_4), 0,  cos(theta_1 + theta_2 + theta_4)]
[                                               0,                                 0, 0,                                 0]
[               -cos(theta_1 + theta_2 + theta_4), -cos(theta_1 + theta_2 + theta_4), 0, -cos(theta_1 + theta_2 + theta_4)]
[               -sin(theta_1 + theta_2 + theta_4), -sin(theta_1 + theta_2 + theta_4), 0, -sin(theta_1 + theta_2 + theta_4)]
[                                               0,                                 0, 0,                                 0]
[                                               0,                                 0, 0,                                 0]
[                                               0,                                 0, 0,                                 0]
[                                               0,                                 0, 0,                                 0]
[ - l_2*sin(theta_1 + theta_2) - l_1*sin(theta_1),       -l_2*sin(theta_1 + theta_2), 0,                                 0]
[   l_2*cos(theta_1 + theta_2) + l_1*cos(theta_1),        l_2*cos(theta_1 + theta_2), 0,                                 0]
[                                               0,                                 0, 1,                                 0]
 
 
J =
 
[                          -cos(theta_2 + theta_3)*sin(theta_1),                          -sin(theta_2 + theta_3)*cos(theta_1),     -sin(theta_2 + theta_3)*cos(theta_1)]
[                           cos(theta_2 + theta_3)*cos(theta_1),                          -sin(theta_2 + theta_3)*sin(theta_1),     -sin(theta_2 + theta_3)*sin(theta_1)]
[                                                             0,                                        cos(theta_2 + theta_3),                   cos(theta_2 + theta_3)]
[                           sin(theta_2 + theta_3)*sin(theta_1),                          -cos(theta_2 + theta_3)*cos(theta_1),     -cos(theta_2 + theta_3)*cos(theta_1)]
[                          -sin(theta_2 + theta_3)*cos(theta_1),                          -cos(theta_2 + theta_3)*sin(theta_1),     -cos(theta_2 + theta_3)*sin(theta_1)]
[                                                             0,                                       -sin(theta_2 + theta_3),                  -sin(theta_2 + theta_3)]
[                                                  cos(theta_1),                                                             0,                                        0]
[                                                  sin(theta_1),                                                             0,                                        0]
[                                                             0,                                                             0,                                        0]
[ -sin(theta_1)*(l_3*cos(theta_2 + theta_3) + l_2*cos(theta_2)), -cos(theta_1)*(l_3*sin(theta_2 + theta_3) + l_2*sin(theta_2)), -l_3*sin(theta_2 + theta_3)*cos(theta_1)]
[  cos(theta_1)*(l_3*cos(theta_2 + theta_3) + l_2*cos(theta_2)), -sin(theta_1)*(l_3*sin(theta_2 + theta_3) + l_2*sin(theta_2)), -l_3*sin(theta_2 + theta_3)*sin(theta_1)]
[                                                             0,                 l_3*cos(theta_2 + theta_3) + l_2*cos(theta_2),               l_3*cos(theta_2 + theta_3)]
 
 
J =
 
[                          -cos(theta_2 + theta_3)*sin(theta_1),                          -sin(theta_2 + theta_3)*cos(theta_1),     -sin(theta_2 + theta_3)*cos(theta_1)]
[                           cos(theta_2 + theta_3)*cos(theta_1),                          -sin(theta_2 + theta_3)*sin(theta_1),     -sin(theta_2 + theta_3)*sin(theta_1)]
[                                                             0,                                        cos(theta_2 + theta_3),                   cos(theta_2 + theta_3)]
[                           sin(theta_2 + theta_3)*sin(theta_1),                          -cos(theta_2 + theta_3)*cos(theta_1),     -cos(theta_2 + theta_3)*cos(theta_1)]
[                          -sin(theta_2 + theta_3)*cos(theta_1),                          -cos(theta_2 + theta_3)*sin(theta_1),     -cos(theta_2 + theta_3)*sin(theta_1)]
[                                                             0,                                       -sin(theta_2 + theta_3),                  -sin(theta_2 + theta_3)]
[                                                  cos(theta_1),                                                             0,                                        0]
[                                                  sin(theta_1),                                                             0,                                        0]
[                                                             0,                                                             0,                                        0]
[ -sin(theta_1)*(l_3*cos(theta_2 + theta_3) + l_2*cos(theta_2)), -cos(theta_1)*(l_3*sin(theta_2 + theta_3) + l_2*sin(theta_2)), -l_3*sin(theta_2 + theta_3)*cos(theta_1)]
[  cos(theta_1)*(l_3*cos(theta_2 + theta_3) + l_2*cos(theta_2)), -sin(theta_1)*(l_3*sin(theta_2 + theta_3) + l_2*sin(theta_2)), -l_3*sin(theta_2 + theta_3)*sin(theta_1)]
[                                                             0,                 l_3*cos(theta_2 + theta_3) + l_2*cos(theta_2),               l_3*cos(theta_2 + theta_3)]
 
 
J =
 
[                          -cos(theta_2 + theta_3)*sin(theta_1),                          -sin(theta_2 + theta_3)*cos(theta_1),     -sin(theta_2 + theta_3)*cos(theta_1)]
[                           cos(theta_2 + theta_3)*cos(theta_1),                          -sin(theta_2 + theta_3)*sin(theta_1),     -sin(theta_2 + theta_3)*sin(theta_1)]
[                                                             0,                                        cos(theta_2 + theta_3),                   cos(theta_2 + theta_3)]
[                           sin(theta_2 + theta_3)*sin(theta_1),                          -cos(theta_2 + theta_3)*cos(theta_1),     -cos(theta_2 + theta_3)*cos(theta_1)]
[                          -sin(theta_2 + theta_3)*cos(theta_1),                          -cos(theta_2 + theta_3)*sin(theta_1),     -cos(theta_2 + theta_3)*sin(theta_1)]
[                                                             0,                                       -sin(theta_2 + theta_3),                  -sin(theta_2 + theta_3)]
[                                                  cos(theta_1),                                                             0,                                        0]
[                                                  sin(theta_1),                                                             0,                                        0]
[                                                             0,                                                             0,                                        0]
[ -sin(theta_1)*(l_3*cos(theta_2 + theta_3) + l_2*cos(theta_2)), -cos(theta_1)*(l_3*sin(theta_2 + theta_3) + l_2*sin(theta_2)), -l_3*sin(theta_2 + theta_3)*cos(theta_1)]
[  cos(theta_1)*(l_3*cos(theta_2 + theta_3) + l_2*cos(theta_2)), -sin(theta_1)*(l_3*sin(theta_2 + theta_3) + l_2*sin(theta_2)), -l_3*sin(theta_2 + theta_3)*sin(theta_1)]
[                                                             0,                 l_3*cos(theta_2 + theta_3) + l_2*cos(theta_2),               l_3*cos(theta_2 + theta_3)]
 
 
J =
 
[                          -cos(theta_2 + theta_3)*sin(theta_1),                          -sin(theta_2 + theta_3)*cos(theta_1),     -sin(theta_2 + theta_3)*cos(theta_1)]
[                           cos(theta_2 + theta_3)*cos(theta_1),                          -sin(theta_2 + theta_3)*sin(theta_1),     -sin(theta_2 + theta_3)*sin(theta_1)]
[                                                             0,                                        cos(theta_2 + theta_3),                   cos(theta_2 + theta_3)]
[                           sin(theta_2 + theta_3)*sin(theta_1),                          -cos(theta_2 + theta_3)*cos(theta_1),     -cos(theta_2 + theta_3)*cos(theta_1)]
[                          -sin(theta_2 + theta_3)*cos(theta_1),                          -cos(theta_2 + theta_3)*sin(theta_1),     -cos(theta_2 + theta_3)*sin(theta_1)]
[                                                             0,                                       -sin(theta_2 + theta_3),                  -sin(theta_2 + theta_3)]
[                                                  cos(theta_1),                                                             0,                                        0]
[                                                  sin(theta_1),                                                             0,                                        0]
[                                                             0,                                                             0,                                        0]
[ -sin(theta_1)*(l_3*cos(theta_2 + theta_3) + l_2*cos(theta_2)), -cos(theta_1)*(l_3*sin(theta_2 + theta_3) + l_2*sin(theta_2)), -l_3*sin(theta_2 + theta_3)*cos(theta_1)]
[  cos(theta_1)*(l_3*cos(theta_2 + theta_3) + l_2*cos(theta_2)), -sin(theta_1)*(l_3*sin(theta_2 + theta_3) + l_2*sin(theta_2)), -l_3*sin(theta_2 + theta_3)*sin(theta_1)]
[                                                             0,                 l_3*cos(theta_2 + theta_3) + l_2*cos(theta_2),               l_3*cos(theta_2 + theta_3)]
 
 
J =
 
[                          -cos(theta_2 + theta_3)*sin(theta_1),                          -sin(theta_2 + theta_3)*cos(theta_1),     -sin(theta_2 + theta_3)*cos(theta_1)]
[                           cos(theta_2 + theta_3)*cos(theta_1),                          -sin(theta_2 + theta_3)*sin(theta_1),     -sin(theta_2 + theta_3)*sin(theta_1)]
[                                                             0,                                        cos(theta_2 + theta_3),                   cos(theta_2 + theta_3)]
[                           sin(theta_2 + theta_3)*sin(theta_1),                          -cos(theta_2 + theta_3)*cos(theta_1),     -cos(theta_2 + theta_3)*cos(theta_1)]
[                          -sin(theta_2 + theta_3)*cos(theta_1),                          -cos(theta_2 + theta_3)*sin(theta_1),     -cos(theta_2 + theta_3)*sin(theta_1)]
[                                                             0,                                       -sin(theta_2 + theta_3),                  -sin(theta_2 + theta_3)]
[                                                  cos(theta_1),                                                             0,                                        0]
[                                                  sin(theta_1),                                                             0,                                        0]
[                                                             0,                                                             0,                                        0]
[ -sin(theta_1)*(l_3*cos(theta_2 + theta_3) + l_2*cos(theta_2)), -cos(theta_1)*(l_3*sin(theta_2 + theta_3) + l_2*sin(theta_2)), -l_3*sin(theta_2 + theta_3)*cos(theta_1)]
[  cos(theta_1)*(l_3*cos(theta_2 + theta_3) + l_2*cos(theta_2)), -sin(theta_1)*(l_3*sin(theta_2 + theta_3) + l_2*sin(theta_2)), -l_3*sin(theta_2 + theta_3)*sin(theta_1)]
[                                                             0,                 l_3*cos(theta_2 + theta_3) + l_2*cos(theta_2),               l_3*cos(theta_2 + theta_3)]
 
 
J =
 
[                          -cos(theta_2 + theta_3)*sin(theta_1),                          -sin(theta_2 + theta_3)*cos(theta_1),     -sin(theta_2 + theta_3)*cos(theta_1)]
[                           cos(theta_2 + theta_3)*cos(theta_1),                          -sin(theta_2 + theta_3)*sin(theta_1),     -sin(theta_2 + theta_3)*sin(theta_1)]
[                                                             0,                                        cos(theta_2 + theta_3),                   cos(theta_2 + theta_3)]
[                           sin(theta_2 + theta_3)*sin(theta_1),                          -cos(theta_2 + theta_3)*cos(theta_1),     -cos(theta_2 + theta_3)*cos(theta_1)]
[                          -sin(theta_2 + theta_3)*cos(theta_1),                          -cos(theta_2 + theta_3)*sin(theta_1),     -cos(theta_2 + theta_3)*sin(theta_1)]
[                                                             0,                                       -sin(theta_2 + theta_3),                  -sin(theta_2 + theta_3)]
[                                                  cos(theta_1),                                                             0,                                        0]
[                                                  sin(theta_1),                                                             0,                                        0]
[                                                             0,                                                             0,                                        0]
[ -sin(theta_1)*(l_3*cos(theta_2 + theta_3) + l_2*cos(theta_2)), -cos(theta_1)*(l_3*sin(theta_2 + theta_3) + l_2*sin(theta_2)), -l_3*sin(theta_2 + theta_3)*cos(theta_1)]
[  cos(theta_1)*(l_3*cos(theta_2 + theta_3) + l_2*cos(theta_2)), -sin(theta_1)*(l_3*sin(theta_2 + theta_3) + l_2*sin(theta_2)), -l_3*sin(theta_2 + theta_3)*sin(theta_1)]
[                                                             0,                 l_3*cos(theta_2 + theta_3) + l_2*cos(theta_2),               l_3*cos(theta_2 + theta_3)]
 
